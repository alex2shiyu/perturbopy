import os
from perturbopy.io_utils.io import open_yaml


class CalcMode():
   """
   This is a class representation of a general Perturbo calculation mode.

   Parameters
   ----------
   pert_dict : dict
      dictionary containing inputs and outputs from a Perturbo calculation

   """

   def __init__(self, pert_dict):
      """
      Constructor method

      """

      self.calc_mode = pert_dict['input parameters']['after conversion'].pop('calc_mode')
      self._pert_dict = pert_dict
     
   @classmethod
   def from_yaml(cls, yaml_path='pert_output.yml'):
      """
      Class method to create a CalcMode object from the yaml file
      generated by a Perturbo calculation.

      Parameters
      ----------
      yaml_path : str
         Path to the yaml file generated by a calculation

      Returns
      -------
      CalcMode
         The CalcMode object generated from the yaml file

      """
     
      if not os.path.isfile(yaml_path):
         raise FileNotFoundError(f'File {yaml_path} not found')
     
      yaml_dict = open_yaml(yaml_path)

      return cls(yaml_dict)
